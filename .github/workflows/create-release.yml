name: Release Creation

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  PROJECT: best-mvp

# By default, no permissions are given to any job's GITHUB_TOKEN.
permissions:
  actions: none

jobs:
  build-and-push-image:
    name: Build and push
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: write
    outputs:
      build-tag: ${{ steps.build.outputs.build-tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get the current release version
        id: get_version
        run: |
          echo version=$(echo $GITHUB_REF | cut -d / -f 3 | tr -d v) >> $GITHUB_OUTPUT
          echo sha_short=$(git rev-parse --short HEAD) >> $GITHUB_OUTPUT
          echo date=$(date +'%Y-%m-%d') >> $GITHUB_OUTPUT

      - name: Get the registry tags
        id: get_image
        run: |
          arch=amd64
          cache="$REGISTRY/$PROJECT/${{github.event.repository.name}}:buildcache-${arch}"
          tag_ghcr="$REGISTRY/$PROJECT/${{github.event.repository.name}}:${{steps.get_version.outputs.version}}"
          echo tag_ghcr=${tag_ghcr} >> $GITHUB_OUTPUT
          echo cache=${cache} >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          build-args: |
            ARCH=amd64
            COMMIT=${{ steps.get_version.outputs.sha_short }}
            VERSION=${{ steps.get_version.outputs.version }}
            DATE=${{ steps.get_version.outputs.date }}
          cache-from: type=registry,ref=${{ steps.get_image.outputs.cache }}
          cache-to: type=registry,ref=${{ steps.get_image.outputs.cache }},mode=max
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.PROJECT }}/${{ github.event.repository.name }}:latest
            ${{ steps.get_image.outputs.tag_ghcr }}

  release:
    runs-on: ubuntu-22.04
    needs: build-and-push-image
    name: Create release
    permissions:
      contents: write
      actions: write

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ env.PROJECT }}/github-actions
          token: ${{ secrets.MVP_GITHUB_TOKEN }}
          path: ./.github/actions/reusable-actions

      - name: Apply reusable action
        id: build
        uses: ./.github/actions/reusable-actions/create-release
        with:
          github-token: ${{ secrets.MVP_GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-22.04
    needs: release
    name: Notify Sandbox
    permissions:
      contents: read
      actions: write

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ env.PROJECT }}/github-actions
          token: ${{ secrets.MVP_GITHUB_TOKEN }}
          path: ./.github/actions/reusable-actions

      - name: Apply reusable action
        id: build
        uses: ./.github/actions/reusable-actions/release-notification
        with:
          github-token: ${{ secrets.MVP_GITHUB_TOKEN }}
